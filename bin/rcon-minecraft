#!/usr/bin/env perl

use 5.008;
use strict;
use warnings;

use Net::RCON::Minecraft;
use Getopt::Long;
use Pod::Usage;

our $VERSION = '0.01';

#
# Main
#

my %o = get_options();
my %PERMITTED = map { $_ => 1 } qw<host port timeout password>;
my %rcon_opts = map { $_ => $o{$_} } grep { $PERMITTED{$_} } keys %o;
my $next_id = 1;

my $rcon = Net::RCON::Minecraft->new(%rcon_opts);

my @commands = @{$o{command} || []};
push @commands, join(' ', @ARGV) if @ARGV;
@commands = (<STDIN>) unless @commands;
chomp @commands;

$rcon->connect; # Force error immediately

run_command($_) for @commands;

exit;

#
# Helpers
#

# Run the command and display the output, echoing if so configured
sub run_command {
    print "> $_[0]\n" if $o{echo};

    my $resp = eval { $rcon->command($_[0]) };
    if ($@) {
        warn "Command failed: $@";
        return;
    }
    my $display = $o{color} ? $resp->ansi : $resp->plain;

    printf "%s\n", length $resp->plain ? $display : '[Command sent]';

}

# Return a hash of the commandline and config options
sub get_options {
    my %o = (
        help        => sub { pod2usage -verbose => 1 },
        version     => sub { print "rcon-minecraft version $VERSION\n"; exit; },
    );
    GetOptions(\%o, qw<host=s port=i password=s timeout=f
        command|cmd=s@ stdin color
        echo help version>
    ) or pod2usage(2);

    %o;
}

__END__

=head1 NAME

rcon-minecraft - RCON interface for Minecraft servers

=head1 SYNOPSIS

B<rcon-minecraft> --pass=password [options] command

B<rcon-minecraft> --pass=password [options] --command='cmd1' ...

=head1 OPTIONS

 --host=host        Hostname to connect to          [127.0.0.1]
                    --address, --addr, --hostname are aliases
 --port=port        Port number                         [25575]
 --password=pass    Password
 --timeout=sec      Timeout in seconds (float)           [30.0]
 -c|--color         Use a colored output (modded servers)   [0]
 --command=cmd      Command to run. May repeat.
                    --cmd is an alias
 --echo             Echo the commands themselves to stdout
 -v|--version       Display version number and exit

Any remaining arguments on the commandline will be concatenated
together and interpreted as a single command, as you might expect.

=head1 DESCRIPTION

I<rcon-minecraft> provides a commandline interface to interact with a
Minecraft server using the RCON protocol. You may specify commands via
commandline options, or via standard input. Additionally, when using C<stdin>,
and I<rcon-minecraft> is running from a TTY, you will have a console-like
interface with readline support, command history, and help.

=head1 OPTION DETAILS

=over 4

=item --host=E<lt>hostE<gt>

The hostname or IP address of the Minecraft server.

=item --port=E<lt>portE<gt>

The TCP port number to connect to. Default is the usual RCON port number, 25575.
This must match the port number defined in your Minecraft server's
C<server.properties> file:

    rcon.port=25575

=item --password=E<lt>passwordE<gt>

The password required to connect to the Minecraft RCON. This is defined in
your Minecraft server's C<server.properties> file:

    rcon.password=

Note that the password must not be blank. A blank password defined in
C<server.properties> means that RCON is disabled on your server.

=item -c | --color

Some modded servers send back colored output. By default these color codes are
stripped to give plaintext output. Setting C<-c> instead causes command output
to be displayed using ANSI escape codes.

=item --echo

Echo commands themselves to standard output

=item -v | --version

Display version number and exit.

=item --help

Display usage summary and exit.

=back
